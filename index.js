const {Account} = require('./account');
const {User} = require('./models/user');
const userModel = new User();

const {bot} = require('./telegram');

(async function () {
    // const acc = new Account('orxan.zeynalli.f@asoiu.edu.az', 'NAnNOu1d');
    // await acc.login();
    // const list = await acc.lessonList()
    // console.log(list)
    // console.log(await acc.getLessonIdByIndex(5))
    // console.log(await acc.getTicket(await acc.getLessonIdByIndex(5)))

    bot.onText(/login/i, function (msg) {
        const chatId = msg.chat.id;
        const user = userModel.findByUsername(msg.text.split(' ')[1])
        if (user) {
            bot.sendMessage(chatId, "Ugurla girish etdiniz! lessons yazib fennlerin siyahisini ala bilersiniz\n");
            bot.sendMessage(chatId, "Uspeshno voshli v sistemu! napishite lessons ctobi polucit spisok predmetov\n");
            userModel.setChatId(user.username, chatId)
        } else {
            bot.sendMessage(chatId, "Istifadechi tapilmadi.\nPolzovatel ne nayden")
        }
    });


    bot.onText(/lessons/i, async function (msg) {
        const chatId = msg.chat.id;
        const user = userModel.findByChatId(chatId)
        if (user && user.chatId === chatId) {
            const account = new Account(user.username, user.password);
            if (!await account.login()) {
                await bot.sendMessage(chatId, "Sizin hesaba girish etmek mumkun olmadi biraz sonra yoxlayin");
                await bot.sendMessage(chatId, "Ne udalos voyti v vash akkount, povtorite pozje");
                return;
            }
            let l = "";
            let lessons;
            try {
                lessons = await account.lessonList();
            } catch (e) {
                console.log(e);
                await bot.sendMessage(chatId, "Xeta bash verdi")
            }
            for (const [index, lesson] of lessons.entries()) {
                l += `${index} - ${lesson.name}\n`;
            }
            await bot.sendMessage(chatId, l)
            await bot.sendMessage(chatId, "Fennin biletini gormek ucun onun qabagindaki nomreni daxil edin")
            await bot.sendMessage(chatId, "Vvedite nomer predmeta ctobi polucit bilet")
        } else {
            await bot.sendMessage(chatId, "Siz girish etmemisiniz")
            await bot.sendMessage(chatId, "Vi ne voshli v sistemu")
        }
    });

    bot.onText(/[0-9]/i, async function (msg) {
        const chatId = msg.chat.id;
        const text = msg.text;
        const user = userModel.findByChatId(chatId)
        if (user && user.chatId === chatId) {
            const account = new Account(user.username, user.password);
            if (!await account.login()) {
                await bot.sendMessage(chatId, "Sizin hesaba girish etmek mumkun olmadi biraz sonra yoxlayin");
                await bot.sendMessage(chatId, "Ne udalos voyti v vash akkaunt, povtorite pozje");
                return;
            }
            const index = Number(text);
            if (!isNaN(index)) {
                try {
                    const ticket = await account.getTicket(await account.getLessonIdByIndex(index))
                    await bot.sendMessage(chatId, ticket)
                } catch (e) {
                    await bot.sendMessage(chatId, "Bileti almaq mumkun olmadi. bilet secdiyinizden emin olun")
                    await bot.sendMessage(chatId, "Nevozmojno polucit bilet. Ubedites cto vibrali bilet v sayte")
                }
            }
        } else {
            await bot.sendMessage(chatId, "Siz girish etmemisiniz")
            await bot.sendMessage(chatId, "Vi ne voshli v sistemu")
        }
    });

})();
